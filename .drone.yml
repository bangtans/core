---
kind: pipeline
type: docker
name: install-dependencies-php7.1

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: cache-rebuild
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    mount:
    - .cache
    rebuild: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    event:
    - push
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: cache-flush
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    flush: true
    flush_age: 14
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    event:
    - push
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

---
kind: pipeline
type: docker
name: coding-standard-php7.3

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: php-style
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make test-php-style

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- install-dependencies-php7.1

---
kind: pipeline
type: docker
name: phpunit-php7.1-sqlite-samba

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - ls -l /drone
  - ls -l /drone/sambacache
  - chmod -R 777 /drone/sambacache
  - ls -l /drone/sambacache
  - ls -l /var/cache
  - apt-get update && apt-get -y install samba-common
  - ls -l /var/cache
  - php -m
  - ls -l /etc/samba
  - cat /etc/samba/smb.conf
  - "echo \"[global]\n  cache directory = /drone/sambacache\n\" > /etc/samba/smb.conf"
  - cat /etc/samba/smb.conf
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: sqlite
    FILES_EXTERNAL_TYPE: samba

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: samba
  pull: always
  image: owncloudci/samba:latest
  command:
  - -g cache directory = /drone/sambacache
  - -u
  - test;test
  - -s
  - public;/tmp;yes;no;no;test;none;test
  - -S

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-sqlite-windows

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - ls -l /drone
  - ls -l /drone/sambacache
  - chmod -R 777 /drone/sambacache
  - ls -l /drone/sambacache
  - ls -l /var/cache
  - apt-get update && apt-get -y install samba-common
  - ls -l /var/cache
  - php -m
  - ls -l /etc/samba
  - cat /etc/samba/smb.conf
  - "echo \"[global]\n  cache directory = /drone/sambacache\n\" > /etc/samba/smb.conf"
  - cat /etc/samba/smb.conf
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: sqlite
    FILES_EXTERNAL_TYPE: windows

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-sqlite-webdav

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: sqlite
    FILES_EXTERNAL_TYPE: webdav

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: webdav
  pull: always
  image: owncloudci/php:latest
  command:
  - /usr/local/bin/apachectl
  - -D
  - FOREGROUND
  environment:
    APACHE_CONFIG_TEMPLATE: webdav

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-sqlite-sftp

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: sqlite
    FILES_EXTERNAL_TYPE: sftp

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: sftp
  pull: always
  image: atmoz/sftp
  environment:
    SFTP_USERS: test:12345:1001::upload

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-sqlite-scality

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: install-extra-apps
  pull: always
  image: owncloudci/php:7.1
  commands:
  - git clone https://github.com/owncloud/files_primary_s3.git /drone/src/apps/files_primary_s3
  - cd /drone/src/apps/files_primary_s3
  - composer install
  - cd /drone/src
  - php occ a:l
  - php occ a:e files_primary_s3
  - php occ a:l

- name: setup-scality
  pull: always
  image: owncloudci/php:7.1
  commands:
  - wait-for-it -t 60 scality:8000
  - cp /drone/src/apps/files_primary_s3/tests/drone/scality.config.php /drone/src/config
  - php occ s3:create-bucket owncloud --accept-warning

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: sqlite
    PRIMARY_OBJECTSTORE: files_primary_s3

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: scality
  pull: always
  image: owncloudci/scality-s3server:latest
  environment:
    HOST_NAME: scality

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3

---
kind: pipeline
type: docker
name: chat-notifications

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: notify-rocketchat
  pull: always
  image: plugins/slack:1
  settings:
    channel: server
    webhook:
      from_secret: public_rocketchat

trigger:
  ref:
  - refs/tags/**
  - refs/heads/master
  status:
  - success
  - failure

depends_on:
- phpunit-php7.1-sqlite-samba
- phpunit-php7.1-sqlite-windows
- phpunit-php7.1-sqlite-webdav
- phpunit-php7.1-sqlite-sftp
- phpunit-php7.1-sqlite-scality

...
